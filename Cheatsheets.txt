***********************************************************************************

Linux Syscall description file path:
- /usr/include/i386-linux-gnu/asm/unistd_32.h

#define __NR_socketcall 102

***********************************************************************************

Linux Socketcall numbers 
- /usr/include/linux/net.h

#define SYS_SOCKET      1               /* sys_socket(2)                */
#define SYS_BIND        2               /* sys_bind(2)                  */
#define SYS_CONNECT     3               /* sys_connect(2)               */
#define SYS_LISTEN      4               /* sys_listen(2)                */
#define SYS_ACCEPT      5               /* sys_accept(2)                */
#define SYS_GETSOCKNAME 6               /* sys_getsockname(2)           */
#define SYS_GETPEERNAME 7               /* sys_getpeername(2)           */
#define SYS_SOCKETPAIR  8               /* sys_socketpair(2)            */
#define SYS_SEND        9               /* sys_send(2)                  */
#define SYS_RECV        10              /* sys_recv(2)                  */
#define SYS_SENDTO      11              /* sys_sendto(2)                */
#define SYS_RECVFROM    12              /* sys_recvfrom(2)              */
#define SYS_SHUTDOWN    13              /* sys_shutdown(2)              */
#define SYS_SETSOCKOPT  14              /* sys_setsockopt(2)            */
#define SYS_GETSOCKOPT  15              /* sys_getsockopt(2)            */
#define SYS_SENDMSG     16              /* sys_sendmsg(2)               */
#define SYS_RECVMSG     17              /* sys_recvmsg(2)               */
#define SYS_ACCEPT4     18              /* sys_accept4(2)               */
#define SYS_RECVMMSG    19              /* sys_recvmmsg(2)              */
#define SYS_SENDMMSG    20              /* sys_sendmmsg(2)              */

***********************************************************************************

Linux IP Protocols Declarations
- /usr/include/netinet/in.h

IPPROTO_IP = 0,        /* Dummy protocol for TCP.  */
IPPROTO_HOPOPTS = 0,   /* IPv6 Hop-by-Hop options.  */
IPPROTO_ICMP = 1,      /* Internet Control Message Protocol.  */
IPPROTO_IGMP = 2,      /* Internet Group Management Protocol. */
IPPROTO_IPIP = 4,      /* IPIP tunnels (older KA9Q tunnels use 94).  */
IPPROTO_TCP = 6,       /* Transmission Control Protocol.  */
IPPROTO_EGP = 8,       /* Exterior Gateway Protocol.  */
IPPROTO_PUP = 12,      /* PUP protocol.  */
IPPROTO_UDP = 17,      /* User Datagram Protocol.  */
IPPROTO_IDP = 22,      /* XNS IDP protocol.  */
IPPROTO_TP = 29,       /* SO Transport Protocol Class 4.  */

***********************************************************************************

Linux System-specific socket constants and types
- /usr/include/i386-linux-gnu/bits/socket.h

Type of sockets:

SOCK_STREAM = 1,              /* Sequenced, reliable, connection-based
SOCK_DGRAM = 2,               /* Connectionless, unreliable datagrams
SOCK_RAW = 3,                 /* Raw protocol interface.  */
SOCK_RDM = 4,                 /* Reliably-delivered messages.  */
SOCK_SEQPACKET = 5,           /* Sequenced, reliable, connection-based,
SOCK_DCCP = 6,                /* Datagram Congestion Control Protocol.  */
SOCK_PACKET = 10,             /* Linux specific way of getting packets

Protocol Families:

#define PF_UNSPEC       0       /* Unspecified.  */
#define PF_LOCAL        1       /* Local to host (pipes and file-domain).  */
#define PF_UNIX         PF_LOCAL /* POSIX name for PF_LOCAL.  */
#define PF_FILE         PF_LOCAL /* Another non-standard name for PF_LOCAL.  */
#define PF_INET         2       /* IP protocol family.  */
#define PF_AX25         3       /* Amateur Radio AX.25.  */
#define PF_IPX          4       /* Novell Internet Protocol.  */
#define PF_APPLETALK    5       /* Appletalk DDP.  */
#define PF_NETROM       6       /* Amateur radio NetROM.  */
#define PF_BRIDGE       7       /* Multiprotocol bridge.  */
#define PF_ATMPVC       8       /* ATM PVCs.  */
#define PF_X25          9       /* Reserved for X.25 project.  */
#define PF_INET6        10      /* IP version 6.  */
#define PF_ROSE         11      /* Amateur Radio X.25 PLP.  */
#define PF_DECnet       12      /* Reserved for DECnet project.  */
#define PF_NETBEUI      13      /* Reserved for 802.2LLC project.  */
#define PF_SECURITY     14      /* Security callback pseudo AF.  */
#define PF_KEY          15      /* PF_KEY key management API.  */
#define PF_NETLINK      16
#define PF_ROUTE        PF_NETLINK /* Alias to emulate 4.4BSD.  */
#define PF_PACKET       17      /* Packet family.  */
#define PF_ASH          18      /* Ash.  */
#define PF_ECONET       19      /* Acorn Econet.  */
#define PF_ATMSVC       20      /* ATM SVCs.  */

***********************************************************************************

Values for setsockopt():
- /usr/include/asm-generic/socket.h

#define SOL_SOCKET      1
#define SO_DEBUG        1
#define SO_REUSEADDR    2
#define SO_TYPE         3
#define SO_ERROR        4
#define SO_DONTROUTE    5
#define SO_BROADCAST    6
#define SO_SNDBUF       7
#define SO_RCVBUF       8
#define SO_SNDBUFFORCE  32
#define SO_RCVBUFFORCE  33
#define SO_KEEPALIVE    9
#define SO_OOBINLINE    10
#define SO_NO_CHECK     11
#define SO_PRIORITY     12
#define SO_LINGER       13
#define SO_BSDCOMPAT    14


***********************************************************************************
Finding syscalls: socket(AF_INET, SOCK_STREAM, IPPROTO_IP)

AF_INET
- /usr/include/i386-linux-gnu/bits/socket.h +122
  - #define AF_INET    PF_INET
- /usr/include/i386-linux-gnu/bits/socket.h +78
  - #define PF_INET         2       /* IP protocol family.  */
  
SOCK_STREAM
- /usr/include/i386-linux-gnu/bits/socket.h +42
  -   SOCK_STREAM = 1,              /* Sequenced, reliable, connection-based byte streams.  */

IPPROTO_IP
- /usr/include/netinet/in.h + 34
  - IPPROTO_IP = 0,        /* Dummy protocol for TCP.  */

***********************************************************************************

Finding syscalls: setsockopt(sock, SOL_SOCKET, SO_REUSEADDR, &socklen_t, socklen_t)
